[tool.poetry]
name = 'pytui'
version = '0.1.0'
description = 'A library of elements for interactive TUIs in Python'
authors = ['Peter Vyboch <pvyboch1@gmail.com>']
license = 'MIT'

[tool.poe.tasks]
add = { shell = 'poetry add' }
install = { shell = 'poetry install' }
build = { shell = 'poetry build' }
clean = { shell = 'rm -R ./dist .pytest_cache .mypy_cache &> /dev/null' }

isort = { shell = 'poetry run isort ./pytui' }
black = { shell = 'poetry run black ./pytui/' }
mypy = { shell = 'poetry run mypy ./pytui/' }
flake8 = {shell = 'poetry run pflake8 ./pytui/'}
lint = { shell = 'echo "Running isort..." ; poetry run isort ./pytui ; echo "Running yapf..." ; poetry run black ; echo "Running flake8..." ; poetry run pflake8 ./pytui/ ; echo "Running perflint..." ; poetry run perflint ./pytui/'}

[tool.poetry.dependencies]
python = '^3.7'
readchar = '^3.1.0'
rich = '^12.5.1'

[[tool.pydoc-markdown.loaders]]
type = 'python'
search_path = [ './pytui' ]

[tool.pydoc-markdown.renderer]
type = 'markdown'


[tool.poetry.dev-dependencies]
# Code Scanning and Formatting
mypy = '*'
pyproject-flake8 = '*'
black = "^22.6.0"

## Bugs
flake8-bugbear = '*'
flake8-simplify = '*'
flake8-pie = '*'
flake8-bandit = '*'

## Complexity
flake8-cognitive-complexity = '*'
flake8-expression-complexity = '*'
radon = '*'
xenon = '*'

## Lints
flake8-quotes = '*'
flake8-print = '*'
flake8-eradicate = '*'
flake8-comments = '*'
toml-sort = '*'
isort = '*'

## Performance
perflint = '*'

# Expect Pattern Testing
expycted = '*'

# Unit Testing
ward = '*'
mock = '*'
watchdog = '*'

# Task Runner
poethepoet = '*'
pydoc-markdown = "^4.6.3"

[tool.ward]
path = ['test']

[build-system]
requires = ['poetry-core>=1.0.0']
build-backend = 'poetry.core.masonry.api'
